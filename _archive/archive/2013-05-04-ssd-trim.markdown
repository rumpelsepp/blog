---
layout: post
status: publish
published: true
title: SSD Trim
author:
  display_name: Stefan Tatschner
  login: stefan
  email: stefan@sevenbyte.org
  url: ''
author_login: stefan
author_email: stefan@sevenbyte.org
excerpt: "<blockquote>Der TRIM-Befehl erm&ouml;glicht es einem Betriebssystem, dem
  Speichermedium Solid-State-Drive (SSD) mitzuteilen, dass gel&ouml;schte oder anderweitig
  freigewordene Bl&ouml;cke nicht mehr benutzt werden. Im Normalfall vermerkt das
  Betriebssystem nur in den Verwaltungsstrukturen des Dateisystems,dass die entsprechenden
  Bereiche wieder f&uuml;r neue Daten zur Verf&uuml;gung stehen; der Controller des
  Solid-State-Laufwerks erh&auml;lt diese Informationen in der Regel jedoch nicht.<&#47;blockquote>\r\nDa
  bei der klassischen Festplatte die Daten auf rotierende magnetische Scheiben geschrieben
  werden, ist es egal, ob ein gewisser Sektor noch mit Daten belegt ist oder nicht.
  Bei einer L&ouml;schaktion im Dateisystem wird nur der entsprechende Eintrag aus
  dem Inhaltsverzeichnis des Dateisystems entfernt. Der entsprechende Sektor auf der
  Festplatte kann so beim n&auml;chsten Schreibvorgang problemlos &uuml;berschrieben
  werden.\r\n\r\n"
wordpress_id: 43
wordpress_url: http://sevenbyte.org/?p=43
date: '2013-05-04 10:52:38 +0200'
date_gmt: '2013-05-04 08:52:38 +0200'
categories:
- General
tags:
- scripting
- administrating
comments: []
---
<blockquote>Der TRIM-Befehl erm&ouml;glicht es einem Betriebssystem, dem Speichermedium Solid-State-Drive (SSD) mitzuteilen, dass gel&ouml;schte oder anderweitig freigewordene Bl&ouml;cke nicht mehr benutzt werden. Im Normalfall vermerkt das Betriebssystem nur in den Verwaltungsstrukturen des Dateisystems,dass die entsprechenden Bereiche wieder f&uuml;r neue Daten zur Verf&uuml;gung stehen; der Controller des Solid-State-Laufwerks erh&auml;lt diese Informationen in der Regel jedoch nicht.<&#47;blockquote><br />
Da bei der klassischen Festplatte die Daten auf rotierende magnetische Scheiben geschrieben werden, ist es egal, ob ein gewisser Sektor noch mit Daten belegt ist oder nicht. Bei einer L&ouml;schaktion im Dateisystem wird nur der entsprechende Eintrag aus dem Inhaltsverzeichnis des Dateisystems entfernt. Der entsprechende Sektor auf der Festplatte kann so beim n&auml;chsten Schreibvorgang problemlos &uuml;berschrieben werden.</p>
<p><a id="more"></a><a id="more-43"></a></p>
<p>Bei SSDs funktioniert dies so nicht. Die Information, dass ein Speicherblock leer ist, muss auch an den Controller gemeldet werden, damit diese Speicherzelle als leer markiert werden kann. Wird dies nicht gemacht, &auml;ussert sich dies in einer progressiven Abnahme der Schreibperformance der SSD. Es stehen dem Controller immer weniger freie Speicherzellen zur Verf&uuml;gung um Daten zu schreiben, obwohl diese im Dateisystem keinen Daten mehr zugeordnet sind. Diese Weitergabe der Informationen &uuml;ber gel&ouml;schte Daten an den Controller &uuml;bernimmt der TRIM Befehl.</p>
<p>Unter Linux gibt es tendentiell zwei M&ouml;glichen TRIM zu aktivieren. Der erste ist das `discard` mountflag in der `fstab`. Dabei wird allerdings TRIM bei jedem einzelnen L&ouml;schvorgang ausgef&uuml;hrt und so die Performance messbar verschlechtert. Effizienter ist es TRIM nur einmal pro Woche auszuf&uuml;hren. Folgendes Shellscript f&uuml;hrt TRIM (mit dem Befehl `fstrim`) aus und schreibt den Zeitpunkt der Ausf&uuml;hrung in eine Logdatei.</p>
<pre class="lang:sh decode:true">#!&#47;bin&#47;bash</p>
<p>LOG=&#47;var&#47;log&#47;trim.log<br />
echo "*** $(date -R) ***" >> $LOG<br />
fstrim -v &#47; >> $LOG<&#47;pre><br />
Unter den meisten Linuxdistribution ist es ausreichend dieses Script unter `etc&#47;cron.weekly` zu kopieren und mittels `chmod +x` ausf&uuml;hrbar zu machen. Wenn alles richtig eingerichtet ist, sollte nach einigen Wochen Laufzeit unter `&#47;var&#47;log&#47;trim.log` ein vergleichbarer Inhalt zu folgendem Ausschnitt zu finden sein.</p>
<pre class="lang:default highlight:0 decode:true">*** Tue, 12 Mar 2013 16:43:01 +0100 ***<br />
&#47;: 160831799296 bytes were trimmed<br />
*** Tue, 19 Mar 2013 15:29:02 +0100 ***<br />
&#47;: 151000690688 bytes were trimmed<br />
*** Wed, 27 Mar 2013 10:07:01 +0100 ***<br />
&#47;: 144967639040 bytes were trimmed<br />
*** Wed, 03 Apr 2013 17:31:01 +0200 ***<br />
&#47;: 143965376512 bytes were trimmed<br />
*** Wed, 10 Apr 2013 09:50:02 +0200 ***<br />
&#47;: 142762799104 bytes were trimmed<br />
*** Wed, 17 Apr 2013 12:47:01 +0200 ***<br />
&#47;: 144134942720 bytes were trimmed<br />
*** Wed, 24 Apr 2013 10:48:01 +0200 ***<br />
&#47;: 144815099904 bytes were trimmed<br />
*** Wed, 01 May 2013 12:06:01 +0200 ***<br />
&#47;: 136217600000 bytes were trimmed<&#47;pre></p>
